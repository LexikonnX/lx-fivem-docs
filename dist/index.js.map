{"version":3,"sources":["../src/utils/fs.ts","../src/parsers/lua.ts","../src/parsers/js.ts","../src/parsers/fxmanifest.ts","../src/scan.ts","../src/generate/md.ts","../src/generate/json.ts","../src/index.ts"],"sourcesContent":["import { promises as fsp } from \"fs\"\nimport { dirname } from \"path\"\n\nexport async function readText(p: string) {\n  return await fsp.readFile(p, \"utf8\")\n}\n\nexport async function writeText(p: string, s: string) {\n  await fsp.mkdir(dirname(p), { recursive: true } as any).catch(() => {})\n  await fsp.writeFile(p, s, \"utf8\")\n}\n\nexport async function exists(p: string) {\n  try { await fsp.stat(p); return true } catch { return false }\n}\n\nexport async function walk(dir: string) {\n  const out: string[] = []\n  async function rec(d: string) {\n    const items = await fsp.readdir(d, { withFileTypes: true } as any)\n    for (const it of items) {\n      const p = d + \"/\" + it.name\n      if (it.isDirectory()) await rec(p)\n      else out.push(p)\n    }\n  }\n  await rec(dir)\n  return out\n}\n","import { FileScanResult, EventRef } from \"../utils/types.ts\"\n\nconst callRe = /\\b([A-Za-z_][A-Za-z0-9_\\.]*)\\s*\\(([^)]*)\\)/g\nconst assignVarRe = /\\blocal\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*=\\s*[\"']([^\"']+)[\"']/g\nconst assignTableRe = /\\blocal\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*=\\s*\\{([\\s\\S]*?)\\}/g\nconst tableFieldRe = /\\b([A-Za-z_][A-Za-z0-9_]*)\\s*=\\s*[\"']([^\"']+)[\"']|^\\s*\\[\\s*[\"']([^\"']+)[\"']\\s*\\]\\s*=\\s*[\"']([^\"']+)[\"']/gm\nconst evFns = new Set([\"RegisterNetEvent\",\"AddEventHandler\",\"TriggerServerEvent\",\"TriggerClientEvent\",\"TriggerEvent\"])\n\nfunction buildEnv(src: string) {\n  const vars = new Map<string,string>()\n  const fields = new Map<string,string>()\n  let m\n  while ((m = assignVarRe.exec(src))) vars.set(m[1], m[2])\n  while ((m = assignTableRe.exec(src))) {\n    const t = m[1]\n    const body = m[2]\n    let f\n    tableFieldRe.lastIndex = 0\n    while ((f = tableFieldRe.exec(body))) {\n      if (f[1] && f[2]) fields.set(`${t}.${f[1]}`, f[2])\n      else if (f[3] && f[4]) fields.set(`${t}.${f[3]}`, f[4])\n    }\n  }\n  return { vars, fields }\n}\n\nfunction resolveFirstArg(argRaw: string, env: { vars: Map<string,string>, fields: Map<string,string> }) {\n  const s = argRaw.trim()\n  if (s.startsWith('\"') || s.startsWith(\"'\")) {\n    const m = /[\"']([^\"']+)[\"']/.exec(s)\n    return m ? m[1] : \"\"\n  }\n  if (/^[A-Za-z_][A-Za-z0-9_]*$/.test(s)) {\n    const v = env.vars.get(s)\n    if (v) return v\n  }\n  const dot = s.replace(/\\s+/g, \"\")\n  if (/^[A-Za-z_][A-Za-z0-9_]*\\.[A-Za-z_][A-Za-z0-9_]*$/.test(dot)) {\n    const v = env.fields.get(dot)\n    if (v) return v\n  }\n  const idx = dot.match(/^([A-Za-z_][A-Za-z0-9_]*)\\[\\s*[\"']([^\"']+)[\"']\\s*\\]$/)\n  if (idx) {\n    const v = env.fields.get(`${idx[1]}.${idx[2]}`)\n    if (v) return v\n  }\n  const cat = dot.match(/^([A-Za-z_][A-Za-z0-9_]*)\\.\\.[\"']([^\"']+)[\"']$/)\n  if (cat) {\n    const v = env.vars.get(cat[1]) || \"\"\n    if (v) return v + cat[2]\n  }\n  return \"\"\n}\n\nexport function parseLua(path: string, src: string): FileScanResult {\n  const env = buildEnv(src)\n  const events: Record<string, EventRef> = {}\n  const lines = src.split(/\\r?\\n/)\n  for (let i = 0; i < lines.length; i++) {\n    callRe.lastIndex = 0\n    let m\n    while ((m = callRe.exec(lines[i]))) {\n      const fn = m[1]\n      const args = m[2]\n      if (!evFns.has(fn)) continue\n      const firstArg = args.split(\",\")[0] || \"\"\n      const name = resolveFirstArg(firstArg, env)\n      const key = name || \"\"\n      const where = `${path}:${i+1}`\n      if (!events[key]) events[key] = { name: key, calls: [], handlers: [] }\n      if (fn === \"RegisterNetEvent\" || fn === \"AddEventHandler\") events[key].handlers.push(where)\n      else events[key].calls.push(where)\n    }\n  }\n  return { path, language: \"lua\", events: Object.values(events), commands: [], nui: [] }\n}\n","import { FileScanResult, CommandRef, NuiRef } from \"../utils/types.ts\"\n\nexport function parseJs(path: string, src: string): FileScanResult {\n  const commands: CommandRef[] = []\n  const nui: NuiRef[] = []\n  const lines = src.split(/\\r?\\n/)\n  const cmdRe = /\\bRegisterCommand\\s*\\(\\s*[\"'`]([^\"'`]+)[\"'`]/g\n  const nuiRe = /\\bRegisterNUICallback\\s*\\(\\s*[\"'`]([^\"'`]+)[\"'`]/g\n  for (let i = 0; i < lines.length; i++) {\n    let m\n    cmdRe.lastIndex = 0\n    while ((m = cmdRe.exec(lines[i]))) {\n      const name = m[1]\n      const where = `${path}:${i+1}`\n      const e = commands.find(c => c.name === name)\n      if (e) e.where.push(where)\n      else commands.push({ name, where: [where] })\n    }\n    nuiRe.lastIndex = 0\n    while ((m = nuiRe.exec(lines[i]))) {\n      const name = m[1]\n      const where = `${path}:${i+1}`\n      const e = nui.find(n => n.name === name)\n      if (e) e.where.push(where)\n      else nui.push({ name, where: [where] })\n    }\n  }\n  return { path, language: \"javascript\", events: [], commands, nui }\n}\n","import { FileScanResult } from \"../utils/types.ts\"\n\nexport function parseFx(path: string, src: string): FileScanResult {\n  return { path, language: \"fxmanifest\", events: [], commands: [], nui: [] }\n}\n","import { walk, readText } from \"./utils/fs\"\nimport { FileScanResult, ProjectScan } from \"./utils/types\"\nimport { parseLua } from \"./parsers/lua\"\nimport { parseJs } from \"./parsers/js\"\nimport { parseFx } from \"./parsers/fxmanifest\"\nimport { relative } from \"path\"\n\nfunction ext(p: string) {\n  const m = p.match(/\\.([a-zA-Z0-9]+)$/)\n  return m ? m[1].toLowerCase() : \"\"\n}\n\nexport async function scanProject(root: string): Promise<ProjectScan> {\n  const files = await walk(root)\n  const out: FileScanResult[] = []\n  for (const abs of files) {\n    const rel = relative(root, abs) || abs\n    const e = ext(abs)\n    const src = await readText(abs).catch(() => \"\")\n    if (!src) continue\n    if (abs.endsWith(\"fxmanifest.lua\")) out.push(parseFx(rel, src))\n    else if (e === \"lua\") out.push(parseLua(rel, src))\n    else if (e === \"js\" || e === \"ts\") out.push(parseJs(rel, src))\n  }\n  const events: Record<string, { name: string; calls: string[]; handlers: string[] }> = {}\n  const commands: Record<string, { name: string; where: string[] }> = {}\n  const nui: Record<string, { name: string; where: string[] }> = {}\n  for (const f of out) {\n    for (const ev of f.events || []) {\n      const k = ev.name || \"\"\n      if (!events[k]) events[k] = { name: k, calls: [], handlers: [] }\n      events[k].calls.push(...(ev.calls || []))\n      events[k].handlers.push(...(ev.handlers || []))\n    }\n    for (const c of f.commands || []) {\n      if (!commands[c.name]) commands[c.name] = { name: c.name, where: [] }\n      commands[c.name].where.push(...(c.where || []))\n    }\n    for (const n of f.nui || []) {\n      if (!nui[n.name]) nui[n.name] = { name: n.name, where: [] }\n      nui[n.name].where.push(...(n.where || []))\n    }\n  }\n  return { files: out, events: Object.values(events), commands: Object.values(commands), nui: Object.values(nui) }\n}\n","import { ProjectScan } from \"../utils/types\"\n\nfunction table(h: string[], rows: string[][]) {\n  const a = `| ${h.join(\" | \")} |`\n  const b = `|${h.map(()=> \"---\").join(\"|\")}|`\n  const r = rows.map(x=>`| ${x.join(\" | \")} |`).join(\"\\n\")\n  return [a,b,r].join(\"\\n\")\n}\n\nfunction list(s: string[]) {\n  return s.join(\", \")\n}\n\nexport function renderMarkdown(p: ProjectScan) {\n  const parts: string[] = []\n  parts.push(\"# Project map\")\n  const byFile = p.files.slice().sort((a,b)=>a.path.localeCompare(b.path))\n  for (const f of byFile) {\n    const name = f.path.split(\"/\").pop() || f.path\n    parts.push(`\\n## ${name}`)\n    if (f.events.length) {\n      parts.push(`\\n### Net events\\n`)\n      const rows = f.events.map(e=>[e.name || \"(unknown)\", e.calls.length?list(e.calls):\"\", e.handlers.length?list(e.handlers):\"\"])\n      parts.push(table([\"Name\",\"Calls\",\"Handlers\"], rows))\n    }\n    if (f.commands.length) {\n      parts.push(`\\n### Commands\\n`)\n      const rows = f.commands.map(c=>[c.name, list(c.where)])\n      parts.push(table([\"Name\",\"Where\"], rows))\n    }\n    if (f.nui.length) {\n      parts.push(`\\n### NUI callbacks\\n`)\n      const rows = f.nui.map(n=>[n.name, list(n.where)])\n      parts.push(table([\"Name\",\"Where\"], rows))\n    }\n  }\n  parts.push(`\\n## Summary`)\n  if (p.events.length) {\n    parts.push(`\\n### All events\\n`)\n    const rows = p.events.map(e=>[e.name || \"(unknown)\", String(e.calls.length), String(e.handlers.length)])\n    parts.push(table([\"Name\",\"Calls\",\"Handlers\"], rows))\n  }\n  if (p.commands.length) {\n    parts.push(`\\n### All commands\\n`)\n    const rows = p.commands.map(c=>[c.name, String(c.where.length)])\n    parts.push(table([\"Name\",\"Count\"], rows))\n  }\n  if (p.nui.length) {\n    parts.push(`\\n### All NUI callbacks\\n`)\n    const rows = p.nui.map(n=>[n.name, String(n.where.length)])\n    parts.push(table([\"Name\",\"Count\"], rows))\n  }\n  return parts.join(\"\\n\")\n}\n","import { ProjectScan } from \"../utils/types.ts\"\n\nexport function renderJson(p: ProjectScan) {\n  return JSON.stringify(p, null, 2)\n}\n","import { scanProject } from \"./scan\"\nimport { writeText, exists } from \"./utils/fs\"\nimport { renderMarkdown } from \"./generate/md\"\nimport { renderJson } from \"./generate/json\"\nimport { join } from \"path\"\n\nfunction parseArgs(argv: string[]) {\n  const args = argv.slice(2)\n  const cmd = args[0] || \"\"\n  const rest = args.slice(1)\n  const opts: Record<string,string> = {}\n  const pos: string[] = []\n  for (let i=0;i<rest.length;i++) {\n    const a = rest[i]\n    if (a === \"--out\") opts.out = rest[++i]\n    else if (a === \"--format\") opts.format = rest[++i]\n    else pos.push(a)\n  }\n  return { cmd, pos, opts }\n}\n\nasync function main() {\n  const { cmd, pos, opts } = parseArgs(process.argv)\n  if (cmd !== \"scan\") {\n    console.error(\"Usage: index scan <path> --out <dir> --format md,json|md|json\")\n    process.exit(1)\n  }\n  const root = pos[0]\n  if (!root || !(await exists(root))) {\n    console.error(\"Path not found\")\n    process.exit(1)\n  }\n  const outDir = String(opts.out || \"./docs\")\n  const format = String(opts.format || \"md,json\")\n  const proj = await scanProject(root)\n  if (format.includes(\"md\")) {\n    const md = renderMarkdown(proj)\n    await writeText(join(outDir, \"API.md\"), md)\n  }\n  if (format.includes(\"json\")) {\n    const js = renderJson(proj)\n    await writeText(join(outDir, \"trace.json\"), js)\n  }\n  console.log(\"Done\")\n}\n\nmain().catch(e=>{ console.error(e); process.exit(1) })\n"],"mappings":"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","names":[]}